import * as escapeStringNs from 'escape-string-regexp';
const escapeString = escapeStringNs;
export class NgxSelectOption {
    constructor(value, text, disabled, data, _parent = null) {
        this.value = value;
        this.text = text;
        this.disabled = disabled;
        this.data = data;
        this._parent = _parent;
        this.type = 'option';
        this.cacheRenderedText = null;
    }
    get parent() {
        return this._parent;
    }
    renderText(sanitizer, highlightText) {
        if (this.cacheHighlightText !== highlightText || this.cacheRenderedText === null) {
            this.cacheHighlightText = highlightText;
            if (this.cacheHighlightText) {
                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml((this.text + '').replace(new RegExp(escapeString(this.cacheHighlightText), 'gi'), '<strong>$&</strong>'));
            }
            else {
                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml(this.text);
            }
        }
        return this.cacheRenderedText;
    }
}
export class NgxSelectOptGroup {
    constructor(label, options = []) {
        this.label = label;
        this.options = options;
        this.type = 'optgroup';
        this.filter(() => true);
    }
    filter(callbackFn) {
        this.optionsFiltered = this.options.filter((option) => callbackFn(option));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXNlbGVjdC5jbGFzc2VzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL29wdGltaXN0ZXgvd3d3L25neC1zZWxlY3QtZXgvc3JjL2FwcC9saWIvIiwic291cmNlcyI6WyJuZ3gtc2VsZWN0L25neC1zZWxlY3QuY2xhc3Nlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEtBQUssY0FBYyxNQUFNLHNCQUFzQixDQUFDO0FBR3ZELE1BQU0sWUFBWSxHQUFHLGNBQWMsQ0FBQztBQUVwQyxNQUFNLE9BQU8sZUFBZTtJQU14QixZQUFtQixLQUFzQixFQUN0QixJQUFZLEVBQ1osUUFBaUIsRUFDakIsSUFBUyxFQUNSLFVBQTZCLElBQUk7UUFKbEMsVUFBSyxHQUFMLEtBQUssQ0FBaUI7UUFDdEIsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUNaLGFBQVEsR0FBUixRQUFRLENBQVM7UUFDakIsU0FBSSxHQUFKLElBQUksQ0FBSztRQUNSLFlBQU8sR0FBUCxPQUFPLENBQTBCO1FBVHJDLFNBQUksR0FBeUIsUUFBUSxDQUFDO1FBaUI5QyxzQkFBaUIsR0FBYSxJQUFJLENBQUM7SUFQM0MsQ0FBQztJQUVELElBQVcsTUFBTTtRQUNiLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN4QixDQUFDO0lBS00sVUFBVSxDQUFDLFNBQXVCLEVBQUUsYUFBcUI7UUFDNUQsSUFBSSxJQUFJLENBQUMsa0JBQWtCLEtBQUssYUFBYSxJQUFJLElBQUksQ0FBQyxpQkFBaUIsS0FBSyxJQUFJLEVBQUU7WUFDOUUsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGFBQWEsQ0FBQztZQUN4QyxJQUFJLElBQUksQ0FBQyxrQkFBa0IsRUFBRTtnQkFDekIsSUFBSSxDQUFDLGlCQUFpQixHQUFHLFNBQVMsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUMvRSxJQUFJLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEVBQUUsSUFBSSxDQUFDLEVBQUUscUJBQXFCLENBQ2pGLENBQUMsQ0FBQzthQUNOO2lCQUFNO2dCQUNILElBQUksQ0FBQyxpQkFBaUIsR0FBRyxTQUFTLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3pFO1NBQ0o7UUFDRCxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztJQUNsQyxDQUFDO0NBQ0o7QUFFRCxNQUFNLE9BQU8saUJBQWlCO0lBSzFCLFlBQW1CLEtBQWEsRUFDYixVQUE2QixFQUFFO1FBRC9CLFVBQUssR0FBTCxLQUFLLENBQVE7UUFDYixZQUFPLEdBQVAsT0FBTyxDQUF3QjtRQUxsQyxTQUFJLEdBQXlCLFVBQVUsQ0FBQztRQU1wRCxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFTSxNQUFNLENBQUMsVUFBMkM7UUFDckQsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQXVCLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQ2hHLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERvbVNhbml0aXplciwgU2FmZUh0bWwgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCAqIGFzIGVzY2FwZVN0cmluZ05zIGZyb20gJ2VzY2FwZS1zdHJpbmctcmVnZXhwJztcbmltcG9ydCB7IElOZ3hTZWxlY3RPcHRHcm91cCwgSU5neFNlbGVjdE9wdGlvbiwgSU5neFNlbGVjdE9wdGlvbkJhc2UsIFROZ3hTZWxlY3RPcHRpb25UeXBlIH0gZnJvbSAnLi9uZ3gtc2VsZWN0LmludGVyZmFjZXMnO1xuXG5jb25zdCBlc2NhcGVTdHJpbmcgPSBlc2NhcGVTdHJpbmdOcztcblxuZXhwb3J0IGNsYXNzIE5neFNlbGVjdE9wdGlvbiBpbXBsZW1lbnRzIElOZ3hTZWxlY3RPcHRpb24sIElOZ3hTZWxlY3RPcHRpb25CYXNlIHtcbiAgICBwdWJsaWMgcmVhZG9ubHkgdHlwZTogVE5neFNlbGVjdE9wdGlvblR5cGUgPSAnb3B0aW9uJztcblxuICAgIHB1YmxpYyBoaWdobGlnaHRlZFRleHQ6IFNhZmVIdG1sO1xuICAgIHB1YmxpYyBhY3RpdmU6IGJvb2xlYW47XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdmFsdWU6IG51bWJlciB8IHN0cmluZyxcbiAgICAgICAgICAgICAgICBwdWJsaWMgdGV4dDogc3RyaW5nLFxuICAgICAgICAgICAgICAgIHB1YmxpYyBkaXNhYmxlZDogYm9vbGVhbixcbiAgICAgICAgICAgICAgICBwdWJsaWMgZGF0YTogYW55LFxuICAgICAgICAgICAgICAgIHByaXZhdGUgX3BhcmVudDogTmd4U2VsZWN0T3B0R3JvdXAgPSBudWxsKSB7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBwYXJlbnQoKTogTmd4U2VsZWN0T3B0R3JvdXAge1xuICAgICAgICByZXR1cm4gdGhpcy5fcGFyZW50O1xuICAgIH1cblxuICAgIHByaXZhdGUgY2FjaGVIaWdobGlnaHRUZXh0OiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBjYWNoZVJlbmRlcmVkVGV4dDogU2FmZUh0bWwgPSBudWxsO1xuXG4gICAgcHVibGljIHJlbmRlclRleHQoc2FuaXRpemVyOiBEb21TYW5pdGl6ZXIsIGhpZ2hsaWdodFRleHQ6IHN0cmluZyk6IFNhZmVIdG1sIHtcbiAgICAgICAgaWYgKHRoaXMuY2FjaGVIaWdobGlnaHRUZXh0ICE9PSBoaWdobGlnaHRUZXh0IHx8IHRoaXMuY2FjaGVSZW5kZXJlZFRleHQgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuY2FjaGVIaWdobGlnaHRUZXh0ID0gaGlnaGxpZ2h0VGV4dDtcbiAgICAgICAgICAgIGlmICh0aGlzLmNhY2hlSGlnaGxpZ2h0VGV4dCkge1xuICAgICAgICAgICAgICAgIHRoaXMuY2FjaGVSZW5kZXJlZFRleHQgPSBzYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdEh0bWwoKHRoaXMudGV4dCArICcnKS5yZXBsYWNlKFxuICAgICAgICAgICAgICAgICAgICBuZXcgUmVnRXhwKGVzY2FwZVN0cmluZyh0aGlzLmNhY2hlSGlnaGxpZ2h0VGV4dCksICdnaScpLCAnPHN0cm9uZz4kJjwvc3Ryb25nPidcbiAgICAgICAgICAgICAgICApKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jYWNoZVJlbmRlcmVkVGV4dCA9IHNhbml0aXplci5ieXBhc3NTZWN1cml0eVRydXN0SHRtbCh0aGlzLnRleHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmNhY2hlUmVuZGVyZWRUZXh0O1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIE5neFNlbGVjdE9wdEdyb3VwIGltcGxlbWVudHMgSU5neFNlbGVjdE9wdEdyb3VwLCBJTmd4U2VsZWN0T3B0aW9uQmFzZSB7XG4gICAgcHVibGljIHJlYWRvbmx5IHR5cGU6IFROZ3hTZWxlY3RPcHRpb25UeXBlID0gJ29wdGdyb3VwJztcblxuICAgIHB1YmxpYyBvcHRpb25zRmlsdGVyZWQ6IE5neFNlbGVjdE9wdGlvbltdO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIGxhYmVsOiBzdHJpbmcsXG4gICAgICAgICAgICAgICAgcHVibGljIG9wdGlvbnM6IE5neFNlbGVjdE9wdGlvbltdID0gW10pIHtcbiAgICAgICAgdGhpcy5maWx0ZXIoKCkgPT4gdHJ1ZSk7XG4gICAgfVxuXG4gICAgcHVibGljIGZpbHRlcihjYWxsYmFja0ZuOiAodmFsdWU6IE5neFNlbGVjdE9wdGlvbikgPT4gYW55KTogdm9pZCB7XG4gICAgICAgIHRoaXMub3B0aW9uc0ZpbHRlcmVkID0gdGhpcy5vcHRpb25zLmZpbHRlcigob3B0aW9uOiBOZ3hTZWxlY3RPcHRpb24pID0+IGNhbGxiYWNrRm4ob3B0aW9uKSk7XG4gICAgfVxufVxuXG5leHBvcnQgdHlwZSBUU2VsZWN0T3B0aW9uID0gTmd4U2VsZWN0T3B0R3JvdXAgfCBOZ3hTZWxlY3RPcHRpb247XG4iXX0=