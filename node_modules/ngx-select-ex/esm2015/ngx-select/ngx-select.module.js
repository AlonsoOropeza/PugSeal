import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NGX_SELECT_OPTIONS, NgxSelectComponent } from './ngx-select.component';
import { NgxSelectOptionDirective, NgxSelectOptionNotFoundDirective, NgxSelectOptionSelectedDirective } from './ngx-templates.directive';
export class NgxSelectModule {
    static forRoot(options) {
        return {
            ngModule: NgxSelectModule,
            providers: [{ provide: NGX_SELECT_OPTIONS, useValue: options }],
        };
    }
}
NgxSelectModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                ],
                declarations: [NgxSelectComponent,
                    NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective,
                ],
                exports: [NgxSelectComponent,
                    NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective,
                ],
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXNlbGVjdC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvb3B0aW1pc3RleC93d3cvbmd4LXNlbGVjdC1leC9zcmMvYXBwL2xpYi8iLCJzb3VyY2VzIjpbIm5neC1zZWxlY3Qvbmd4LXNlbGVjdC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ2hGLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxnQ0FBZ0MsRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBY3pJLE1BQU0sT0FBTyxlQUFlO0lBQ2pCLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBMEI7UUFDNUMsT0FBTztZQUNILFFBQVEsRUFBRSxlQUFlO1lBQ3pCLFNBQVMsRUFBRSxDQUFDLEVBQUMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUMsQ0FBQztTQUNoRSxDQUFDO0lBQ04sQ0FBQzs7O1lBakJKLFFBQVEsU0FBQztnQkFDTixPQUFPLEVBQUU7b0JBQ0wsWUFBWTtpQkFDZjtnQkFDRCxZQUFZLEVBQUUsQ0FBQyxrQkFBa0I7b0JBQzdCLHdCQUF3QixFQUFFLGdDQUFnQyxFQUFFLGdDQUFnQztpQkFDL0Y7Z0JBQ0QsT0FBTyxFQUFFLENBQUMsa0JBQWtCO29CQUN4Qix3QkFBd0IsRUFBRSxnQ0FBZ0MsRUFBRSxnQ0FBZ0M7aUJBQy9GO2FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5HWF9TRUxFQ1RfT1BUSU9OUywgTmd4U2VsZWN0Q29tcG9uZW50IH0gZnJvbSAnLi9uZ3gtc2VsZWN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOZ3hTZWxlY3RPcHRpb25EaXJlY3RpdmUsIE5neFNlbGVjdE9wdGlvbk5vdEZvdW5kRGlyZWN0aXZlLCBOZ3hTZWxlY3RPcHRpb25TZWxlY3RlZERpcmVjdGl2ZSB9IGZyb20gJy4vbmd4LXRlbXBsYXRlcy5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgSU5neFNlbGVjdE9wdGlvbnMgfSBmcm9tICcuL25neC1zZWxlY3QuaW50ZXJmYWNlcyc7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW1xuICAgICAgICBDb21tb25Nb2R1bGUsXG4gICAgXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtOZ3hTZWxlY3RDb21wb25lbnQsXG4gICAgICAgIE5neFNlbGVjdE9wdGlvbkRpcmVjdGl2ZSwgTmd4U2VsZWN0T3B0aW9uU2VsZWN0ZWREaXJlY3RpdmUsIE5neFNlbGVjdE9wdGlvbk5vdEZvdW5kRGlyZWN0aXZlLFxuICAgIF0sXG4gICAgZXhwb3J0czogW05neFNlbGVjdENvbXBvbmVudCxcbiAgICAgICAgTmd4U2VsZWN0T3B0aW9uRGlyZWN0aXZlLCBOZ3hTZWxlY3RPcHRpb25TZWxlY3RlZERpcmVjdGl2ZSwgTmd4U2VsZWN0T3B0aW9uTm90Rm91bmREaXJlY3RpdmUsXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgTmd4U2VsZWN0TW9kdWxlIHtcbiAgICBwdWJsaWMgc3RhdGljIGZvclJvb3Qob3B0aW9uczogSU5neFNlbGVjdE9wdGlvbnMpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPE5neFNlbGVjdE1vZHVsZT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IE5neFNlbGVjdE1vZHVsZSxcbiAgICAgICAgICAgIHByb3ZpZGVyczogW3twcm92aWRlOiBOR1hfU0VMRUNUX09QVElPTlMsIHVzZVZhbHVlOiBvcHRpb25zfV0sXG4gICAgICAgIH07XG4gICAgfVxufVxuIl19